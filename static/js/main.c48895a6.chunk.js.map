{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","request","endpoint","a","fetch","response","ok","Error","statusText","json","getMovie","title","Response","FindMovie","onMovieAdd","useState","setTitle","setMovie","error","setError","handleFindMovie","apiHelpers","newMovie","message","onSubmit","e","preventDefault","htmlFor","type","id","placeholder","classNames","value","onChange","currentTarget","onClick","disabled","App","setMovies","every","current","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c48895a6.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=f3c39190&';\n\nconst request = async (endpoint: string) => {\n  const response = await fetch(`${BASE_URL}${endpoint}`);\n\n  if (!response.ok) {\n    throw new Error(response.statusText);\n  }\n\n  return response.json();\n};\n\nexport const getMovie = async (title: string) => {\n  const movie = await request(`t=${title}`);\n\n  if (movie.Response === 'False') {\n    throw new Error(\"Can't find a movie with such a title\");\n  }\n\n  return movie as Movie;\n};\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\n\nimport * as apiHelpers from '../api/api';\n\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  onMovieAdd: (value: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ onMovieAdd }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [error, setError] = useState<string | null>(null);\n\n  const handleFindMovie = async () => {\n    try {\n      const newMovie = await apiHelpers.getMovie(title);\n\n      setMovie(newMovie);\n    } catch (err) {\n      setError((err as Error).message);\n    }\n  };\n\n  const handleSubmit: React.FormEventHandler = (e) => {\n    e.preventDefault();\n\n    if (movie) {\n      onMovieAdd(movie);\n\n      setMovie(null);\n      setTitle('');\n    }\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                className={classNames('input', { 'is-danger': error })}\n                value={title}\n                onChange={(e) => {\n                  setTitle(e.currentTarget.value);\n                  setError(null);\n                }}\n              />\n            </div>\n          </label>\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={handleFindMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n              disabled={!movie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && (\n          <MovieCard movie={movie} />\n        )}\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleMovieAdd = (movie: Movie): void => {\n    const isUnique = movies.every(({ imdbID }) => movie.imdbID !== imdbID);\n\n    if (isUnique) {\n      setMovies(current => [...current, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList\n          movies={movies}\n        />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie onMovieAdd={handleMovieAdd} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}